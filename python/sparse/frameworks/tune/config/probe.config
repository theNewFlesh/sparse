{
"modules": {
	"qb": "/Users/alexbraun/google_drive/projects/sparse/python/sparse/utilities/mock/qb.py"
},
"probe_cli": {
	   "line_width": 500,
	     "max_rows": 1000,
	 "max_colwidth": 30},
"probe": {
	"prompt": ["SpQL[", "]> "],
	"backingstores": {
		"qube": "<QubeBackingStore>"}
	},
"probe_api": {
	"custom_search_words": {
		"$2500"       : "(pri) <= (2500)",
		"$run"        : "(pri) <= (2500) & (stat) = (running)",
		"$flfrms"     : "(pri) <= (2500) & (flrms) > (0)",
		"$failed"     : "(pri) <= (2500) & (status) = (failed)",
		"$max"        : "(pri) <= (2500) & (max) >= (4)",
		"$long"       : "(pri) <= (2500) & (dist) <= (0.12)",
		"$longnuke"   : "(pri) <= (2500) & (jobtype) ~ (nuke) & (max) >= (0.83)",
		"$down"       : "(state) = (down)",
		"$idle"       : "(state) = (idle)",
		"$idlefull"   : "(state) = (idle) & (slt_pct) >= (1)",
		"$problematic"      : "(pri) <= (2500) & (status) = (failed) | (pri) <= (2500) & (flfrms) > (0) | (pri) <= (2500) & (max) >= (4) | (pri) <= (2500) & (dist) <= (0.12) | (pri) <= (2500) & (jobtype) ~ (nuke) & (max) >= (0.83)",
		"$badnodes"   : "(state) = (idle) & (slot_pct) >= (100) | (state) = (down)"
		}
	},
"qube_backingstore" : {
	"input_lut"  : "QUBE_MASTER_LUT",
	"output_lut" : "QUBE_SHORT_NAME_LUT"
	},
"renderlog_backingstore" : {
	"input_lut"  : "RENDER_LOG_MASTER_LUT",
	"output_lut" : "RENDER_LOG_SHORT_NAME_LUT"
	}
}