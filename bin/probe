#! /usr/bin/env python
# Alex Braun 04.13.2014

# ------------------------------------------------------------------------------
# The MIT License (MIT)

# Copyright (c) 2014 Alex Braun

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# ------------------------------------------------------------------------------

'''
.. module:: probe
	:date: 04.13.2014
	:platform: Unix
	:synopsis: Probe command line search tool

.. moduleauthor:: Alex Braun <ABraunCCS@gmail.com>
'''
# ------------------------------------------------------------------------------

import argparse
from sparse.views.probe_cli import ProbeCLI
from sparse.frameworks.probe.qube_backingstore import QubeBackingStore
# ------------------------------------------------------------------------------

BACKINGSTORES = {'qube': QubeBackingStore}

def run():
	parser = argparse.ArgumentParser(description='Query given backingstore')
	
	parser.add_argument('backingstore', metavar='str', type=str, nargs=1,
						action='store', help='The backingstore to query')

	parser.add_argument('-a', '--args', metavar='str', type=str, nargs='*',
						action='store', default=[], help='Backingstore arguments')

	parser.add_argument('-k', '--kwargs', metavar='str', type=str, nargs='?',
						action='store', default={}, help='Backingstore key word arguments')
	
	parser.add_argument('-s', '--search', metavar='str', type=str, nargs='?',
						action='store', default=False, help='A SpQL search string')
	
	parser.add_argument('-f', '--displayfields', metavar='str', type=str, nargs='*',
						action='store', default=False, help='Only display these fields')
	
	parser.add_argument('-d', '--debug', default=False, action='store_true',
						help='Enable debug mode')
	
	args = parser.parse_args()
	bks = args.backingstore[0]
	_args = args.args
	kwargs = args.kwargs
	if args.kwargs:
		kwargs = eval(args.kwargs)
	cli = ProbeCLI(BACKINGSTORES[bks](*_args, **kwargs), display_fields=args.displayfields, debug_mode=args.debug)
	if args.search:
		cli._api.spql_search(args.search, display_fields=args.displayfields)
		print cli.results
	else:
		cli.cmdloop()

def main():
	run()

if __name__ == '__main__':
	main()